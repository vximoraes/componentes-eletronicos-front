services:
    mongodb:
        container_name: mongodb-componentes-eletronicos
        image: mongo:8
        volumes:
            - vol-mongodb:/data/db
        command: mongod --quiet --logpath /dev/null
        ports:
            - "27017:27017"
        restart: always
        healthcheck:
            test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/componentes-eletronicos --quiet
            interval: 10s
            timeout: 10s
            retries: 5
            start_period: 40s

    minio:
        image: minio/minio:latest
        container_name: minio-componentes-eletronicos
        command: server /data --console-address ":${MINIO_CONSOLE_PORT}"
        ports:
            - "${MINIO_PORT}:${MINIO_PORT}"
            - "${MINIO_CONSOLE_PORT}:${MINIO_CONSOLE_PORT}"
        env_file:
        - .env
        environment:
            - MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
            - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY}
            - MINIO_BROWSER_REDIRECT_URL=http://localhost:${MINIO_CONSOLE_PORT}
        volumes:
            - vol-minio:/data
        restart: always
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:${MINIO_PORT}/minio/health/live"]
            interval: 10s
            timeout: 5s
            retries: 5

    api:
        container_name: componentes-eletronicos-api
        build:
            context: ../componentes-eletronicos-api
            dockerfile: Dockerfile
        ports:
            - "${PORT}:${PORT}"
        env_file:
        - .env
        environment:
            - NODE_ENV=${NODE_ENV}
            - PORT=${PORT}
            - DB_URL=${DB_URL}
            - MINIO_ENDPOINT=${MINIO_ENDPOINT}
            - MINIO_PORT=${MINIO_PORT}
            - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
            - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
            - MINIO_BUCKET=${MINIO_BUCKET}
            - MINIO_BUCKET_2=${MINIO_BUCKET_2}
            - MINIO_PUBLIC_URL=${MINIO_PUBLIC_URL}
            - JWT_SECRET_ACCESS_TOKEN=${JWT_SECRET_ACCESS_TOKEN}
            - JWT_SECRET_REFRESH_TOKEN=${JWT_SECRET_REFRESH_TOKEN}
            - JWT_SECRET_PASSWORD_RECOVERY=${JWT_SECRET_PASSWORD_RECOVERY}
            - JWT_ACCESS_TOKEN_EXPIRATION=${JWT_ACCESS_TOKEN_EXPIRATION}
            - JWT_REFRESH_TOKEN_EXPIRATION=${JWT_REFRESH_TOKEN_EXPIRATION}
        depends_on:
            mongodb:
                condition: service_healthy
            minio:
                condition: service_healthy
        restart: always

    frontend:
        container_name: componentes-eletronicos-front
        build:
            context: .
            dockerfile: Dockerfile
            args:
                - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
        ports:
            - "3000:3000"
        env_file:
        - .env
        environment:
            - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
            - API_URL=${API_URL}
            - NEXTAUTH_URL=${NEXTAUTH_URL}
            - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
            - PORT=3000
        depends_on:
            - api
        restart: always

volumes:
    vol-mongodb:
    vol-minio:
